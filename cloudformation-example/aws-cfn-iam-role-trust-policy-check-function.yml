AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This stack creates a Lambda function that will attach
  a permission boundary policy to quarantine a non-compliant role
Parameters:
  LambdaRoleName:
    Type: String
  LambdaFunctionName:
    Type: String
  S3BucketName:
    Type: String
  S3Key:
    Type: String
Resources:
  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref LambdaRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com' 
            Action: 
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        -
          PolicyName: 'IamRoleTrustPolicyCheckPermissions'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: 'AllowIamPermissions'
                Effect: 'Allow'
                Action: 
                  - 'iam:List*'
                  - 'iam:Get*'
                  - 'iam:PutRolePermissionsBoundary'
                Resource: '*'
              - Sid: 'AllowWriteLogs'
                Effect: 'Allow'
                Action: 
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Sid: 'AllowS3GetObject'
                Effect: 'Allow'
                Action: 
                  - 's3:GetObject'
                Resource: !Sub 'arn:aws:s3:::${S3BucketName}/*'
  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    DependsOn: LambdaRole
    Properties:
      Description: >-
        This Lambda function will attach a permission boundary
        policy to quarantine a non-compliant role
      FunctionName: !Ref LambdaFunctionName
      Handler: lambda_function.lambda_handler
      Role: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${LambdaRoleName}'
      Code: 
        S3Bucket: !Ref S3BucketName
        S3Key: !Ref S3Key
      Runtime: 'python3.7'
      Timeout: 60
Outputs:
  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn
  LambdaRoleId:
    Value: !GetAtt LambdaRole.RoleId
  LambdaFunctionArn:
    Value: !GetAtt LambdaFunction.Arn
